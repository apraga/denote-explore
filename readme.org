#+title:  Denote Explore: Explore your digital Denote garden
#+author: Peter Prevos

The Denote-Explore package provides auxiliary functions to maintain and explore your collection of Denote files. Denote-Explore provides three groups of Emacs commands:

1. /Summary statistics/: Count notes, attachments and keywords.
2. /Random walks/: Generate new ideas using serendipity.
3. /Janitor/: Manage your denote collection.
4. /Visualisations/: Visualise your Denote network.

This package exists because I started to move many files on my computer into Denote silos, leveraging the ingenious file naming convention. These functions helped me to add some structure to the organic chaos of my digital garden.

Read the [[https://lucidmanager.org/productivity/denote-explore][denote-explore manual]] for a comprehensive explanation of all functionality.

This package is available on MELPA.

#+begin_src elisp
  (use-package denote-explore)
#+end_src

Alternatively, you can use the most recent development from GitHub:

#+begin_src elisp
  (package-vc-install '(denote-explore
                        :url "https://github.com/pprevos/denote-explore/"))
#+end_src

* Change Log
** Version 1.1
Added helper function to call R script for network visualisation

** Version 1.0
This version is a complete rewrite of the code to improve coding quality and compatibility with internal changes since Denote version 2.2.

Also major changes to the network visualisation, which can now take a regular expression for partial networks. Most of the code is now undertaken in Emacs Lisp, which saves that Denote notes and attachment structures in JSON format.

The functionality for a Dashboard widget has been moved to a separate file to not enforce the requirements for those users not seeking to implement the widget.

New functionality since the previous version:
- ~denote-explore-identify-duplicate-identifiers~: Provide a list of duplicate identifiers.
- ~denote-explore-single-keywords~: Select a note or attachment with a keyword that is only used once.
- ~denote-explore-zero-keywords~: Select a note or attachment without any keywords.
- ~denote-explore-sort-keywords~: Order the keywords of all Denote notes and attachments alphabetically.
- ~denote-explore-rename-keyword~: Rename or remove a keyword across the whole Denote collection.
- ~denote-explore-sync-metadata~: Synchronise the filenames with the metadata for all Denote files.

* Future Development
** Dashboard
Create a Denote widget for the Emacs Dashboard.

** Managing Attachments
I am working on a set of functions to rename Denote attachments using EXIF metadata. 

** Visualising Denote
The current network visualisation uses the R language as a detour to generate a HTML file with associated JavaScript code. I am slowly working my way to not have to use R, but I first need to learn more JavaScript and the D3 visualisation language.

Perhaps we can use a plain text method to perhaps visualise the network neighbourhood. The [[https://emacs.cafe/emacs/guest-post/2017/06/26/hierarchy.html][hierarchy package]] can display information in a tree format, which might be helpful to visualise the local community of a Denote buffer, e.g. two links backwards and forwards.
